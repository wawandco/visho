{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Plush",
    "scopeName": "text.html.plush",
    "fileTypes": ["html", "htm", "go-html", "plush"],
    "injections": {
		"text.html.plush, L:(source.css - (meta.embedded.block.plush | meta.embedded.line.plush))": {
			"patterns": [
                {
                    "include": "#main"
                }
			]
		}
	},
    "patterns": [
        {
            "include": "text.html.basic"
        },
        {
            "include": "#block-comment"
        }
    ],
    "repository": {
        "block-comment": {
            "begin": "<%#",
            "captures": {
                "0": {
                    "name": "punctuation.definition.comment.begin.plush"
                }
            },
            "end": "%>",
            "name": "comment.block.plush",
            "patterns": [
                {
                    "match": "[^%]>",
                    "name": "invalid.illegal.characters-not-allowed-here.plush"
                }
            ]
        },
        "line-comment": {
            "patterns": [
                {
                    "begin": "#",
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.comment.begin.plush"
                        }
                    },
                    "end": "$",
                    "name": "comment.line.plush"
                }
            ]
        },
        "main":  {
            "begin": "(<%=|<%)",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.section.begin.plush"
                }
            },
            "end": "%>",
            "endCaptures": {
                "0": {
                    "name": "punctuation.section.end.plush"
                }
            },
            "patterns": [
                {
                    "match": "<%[^#]",
                    "name": "invalid.illegal.characters-not-allowed-here.plush"
                },
                {
                    "match": "(\\{|\\}|\\[|\\]|\\(|\\))",
                    "name": "punctuation.bracket.plush"
                },
                {
                    "include": "#block-comment"
                },
                {
                    "include": "#line-comment"
                },
                {
                    "include": "#keyword"
                },
                {
                    "include": "#function"
                },
                {
                    "include": "#operator"
                },
                {
                    "include": "text.html.basic"
                },
                {
                    "include": "#strings"
                },
                {
                    "include": "#variable"
                },
                {
                    "include": "boolean"
                }
            ]
        },
        "keyword": {
            "patterns": [
                {
                    "match": "(?i)\\b(function|let|if|else|return|for|in|fn|func|form_for|form)\\b",
                    "name": "keyword.plush"
                },
                {
                    "match": "\b[0-9]\b",
                    "name": "constant.numeric.plush"
                } 
            ]
        },
        "boolean":{
            "match": "(?i)(true|false)",
            "name": "markup.italic.plush"
        },
        "strings":{
            "patterns": [
                {  "begin": "\"",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.plush"
                        }
                    },
                    "end": "\"",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.plush"
                        }
                    },
                    "name": "string.quoted.double.plush"
                },
                {
                    "begin": "'",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.plush"
                        }
                    },
                    "end": "'",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.plush"
                        }
                    },
                    "name": "string.quoted.single.plush"
                },
                {
                    "begin": "`",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.plush"
                        }
                    },
                    "end": "`",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.plush"
                        }
                    },
                    "name": "string.quoted.other.plush"
                }
            ]  
        },
        "function":{
            "name":"meta.function.method.with-arguments.plush",
            "patterns": [
                {
					"begin": "(\\\\)?(?<![a-zA-Z0-9_\\x{7f}-\\x{10ffff}])([a-zA-Z_\\x{7f}-\\x{10ffff}][a-zA-Z0-9_\\x{7f}-\\x{10ffff}]*)\\s*(\\()",
					"beginCaptures": {
						"1": {
							"patterns": [
							]
						},
						"2": {
							"patterns": [
								{
									"match": "(?i)[a-z_\\x{7f}-\\x{10ffff}][a-z0-9_\\x{7f}-\\x{10ffff}]*",
									"name": "entity.name.function.plush"
								}
							]
						},
						"3": {
							"name": "punctuation.definition.arguments.begin.bracket.round.plush",
                            "patterns": [
                                {
                                    "include": "#parens"
                                },
                                {
                                    "include": "#braces"
                                },
                                {
                                    "include": "#named-arguments"
                                }
                            ]
						}
					},
					"end": "\\)|(?=\\?>)",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.arguments.end.bracket.round.plush"
						}
					},
					"patterns": [
						{
							"include": "#named-arguments"
						},
                        {
                            "include": "#strings"
                        },
                        {
                            "include": "#variable"
                        },
                        {
                            "include": "$self"
                        },
                        {
                            "include": "boolean"
                        },
                        {
                            "include": "#operator"
                        }
					]
				},
                {
                    "include": "#named-arguments"
                },
                {
                    "name": "meta.parameter.type.variable",
                    "include": "meta.function.method.with-arguments.plush"
                }
            ]
        },
        "variable":{
            "patterns": [
                {
                    "match": "([_$[:alpha:]][_$[:alnum:]]*)",
                    "name": "variable.name.plush"
                },
                {
                    "include": "#boolean"
                }
            ]
        },
        "operator": {
            "patterns": [
                {
                    "match": "(==|\\!=|\\~=|<=|<|>=|>|\\&\\&|\\|\\||\\;|\\*|\\\\|/|\\-|\\+)",
                    "name": "keyword.operator.plush"
                },
                {
                    "match": "=",
                    "name":"keyword.operator.new.plush"
                }
            ]
        },
        "parens": {
            "begin": "\\(",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.section.function.begin.plush"
                }
            },
            "end": "\\)",
            "endCaptures": {
                "0": {
                    "name": "punctuation.section.function.end.plush"
                }
            },
            "patterns": [
                {
                    "include": "#named-arguments"
                },
                {
                    "include": "#braces"
                },
                {
                    "include": "$self"
                }
            ]
        },
        "braces": {
            "begin": "\\{",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.section.function.begin.plush"
                }
            },
            "end": "\\}",
            "endCaptures": {
                "0": {
                    "name": "punctuation.section.function.end.plush"
                }
            },
            "patterns": [
                {
                    "include": "#parens"
                },
                {
                    "include": "#named-arguments"
                },
                {
                    "include": "$self"
                }
            ]
        },
        "brackets": {
            "begin": "\\[",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.section.function.begin.plush"
                }
            },
            "end": "\\]",
            "endCaptures": {
                "0": {
                    "name": "punctuation.section.function.end.plush"
                }
            },
            "patterns": [
                {
                    "include": "#braces"
                },
                {
                    "include": "#parens"
                },
                {
                    "include": "#named-arguments"
                },
                {
                    "include": "$self"
                }
            ]
        },
        "named-arguments": {
			"match": "(?i)(?<=|\\(|,)\\s*([A-Za-z0-9_-]*)\\s*(:)(?!:)\\s*([A-Za-z0-9_-]*)",
			"captures": {
				"1": {
					"name": "entity.other.attribute-name"
				},
				"2": {
					"name": "punctuation.separator.colon.plush"
				},
                "3": {
                    "name": "variable.parameter.plush",
                    "patterns": [
                        {
                            "include": "#function"
                        },
                        {
                            "include": "#variable"
                        },
                        {
                            "include": "#keyword"
                        },
                        {
                            "include": "#operator"
                        },
                        {
                            "include": "boolean"
                        }
                    ]
				}
			}
            
		}
    }
}
